{"version":3,"sources":["Subcomponent.jsx","Maincomponent.jsx","App.js","index.js"],"names":["Subcomponent","state","Number","num1","num2","sum","handleChange1","e","setState","target","value","props","onSumChange","id","parseInt","handleChange2","sumnum","this","console","log","style","backgroundColor","padding","display","placeItems","color","placeholder","onChange","type","ref","span","isNaN","React","Component","Maincomponent","compArray","count","sumArray","componentDidMount","CreateSubComponents","handleSumChange","handelSumReduce","reduce","handleCountChange","param","Numbers","computeSum","array","total","number","i","push","key","defaultValue","min","max","gridTemplateColumns","gap","fontWeight","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d236a5c9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nclass Subcomponent extends React.Component {\r\n  state = {\r\n    Number: [\r\n      {\r\n        num1: 0,\r\n        num2: 0,  \r\n        sum:0         \r\n      }        \r\n    ]\r\n  }\r\n  handleChange1=(e)=>{\r\n    this.setState({ num1:e.target.value });\r\n    this.props.onSumChange(this.props.id,parseInt(this.state.num2)+parseInt(e.target.value))\r\n  }\r\n  handleChange2=(e)=>{\r\n    this.setState({ num2:e.target.value });\r\n    this.props.onSumChange(this.props.id,parseInt(this.state.num1)+parseInt(e.target.value))\r\n  }\r\n  \r\n  render() {\r\n    const sumnum=parseInt(this.state.num1)+parseInt(this.state.num2);\r\n    \r\n    console.log(sumnum)\r\n\r\n    return (\r\n       \r\n            <div style={{backgroundColor:\"lightgreen\",padding:\"10px\"}}>\r\n\r\n                <div style={{ display: 'grid', placeItems: 'center' }}>\r\n                <h3 style={{ color: 'gray' }}>Insert Two Number</h3>\r\n                <input\r\n                placeholder='Enter Number1'\r\n                onChange={this.handleChange1}\r\n                type='text'\r\n                    />\r\n\r\n                <br />\r\n                <input\r\n                    placeholder='Enter Number2'                  \r\n                    onChange={this.handleChange2}\r\n                    // onChange={(e) =>{this.setState({ num2: e.target.value })}}\r\n                    type='text'\r\n                />\r\n                <br />\r\n                <label style={{ color: 'blue' }}>\r\n                        <b>\r\n                        <span \r\n                        ref={this.span}style={{ color: 'gray' }}>SUM</span> :\r\n                        {/* {sumnum} {this.props.onSumChange(this.props.id,sumnum)} */}\r\n                        {isNaN(sumnum)?parseInt(0):sumnum} {this.props.onSumChange(this.props.id,isNaN(sumnum)?parseInt(0):sumnum)}\r\n                        {/* {isNaN(parseInt(this.state.num1) + parseInt(this.state.num2))?\"---\":parseInt(this.state.num1) + parseInt(this.state.num2)} */}\r\n                        {/* {this.state.sumStr} */}\r\n                        </b>\r\n                </label>\r\n                <hr />\r\n                </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Subcomponent\r\n","import React, { Component } from 'react'\r\nimport Subcomponent from './Subcomponent'\r\nclass Maincomponent extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  state = {\r\n    compArray: [],\r\n    count: 0,\r\n    sumArray: []\r\n  }\r\n  componentDidMount = () => {\r\n    this.CreateSubComponents(3)\r\n  }\r\n  handleSumChange = (id, sum) => {\r\n    const sumArray = [...this.state.sumArray]\r\n    sumArray[id] = sum\r\n    this.setState({ sumArray })\r\n  }\r\n  handelSumReduce = () => {\r\n    const sum = this.state.sumArray.reduce()\r\n  }\r\n\r\n  handleCountChange = (e) => {\r\n    this.setState({ count: e.target.value })\r\n    let param = parseInt(e.target.value)\r\n    this.CreateSubComponents(param)\r\n\r\n    console.log(this.state.Numbers)\r\n  }\r\n\r\n  CreateSubComponents(count) {\r\n    const compArray = []\r\n    const sumArray = []\r\n    for (let i = 0; i < count; i++) {\r\n      compArray.push(\r\n        <Subcomponent key={i} id={i} onSumChange={this.handleSumChange} />\r\n      )\r\n      sumArray.push(0)\r\n    }\r\n    this.setState({ compArray, sumArray })\r\n\r\n  }\r\n  computeSum=(array)=> {\r\n    const sum = array.reduce((total, number) => total + number, 0);\r\n    console.log(\"sum\",sum);\r\n    return sum;\r\n \r\n    //   console.log(\"arr\",array)\r\n    //   let sum = 0\r\n    // for (let index = 0; index < array; index++) {\r\n       \r\n    //   sum += array[index]    \r\n  \r\n     \r\n    // }\r\n\r\n    //     return sum\r\n  \r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>{this.computeSum( this.state.sumArray )}</label>\r\n        <h1 style={{ color: 'gray' }}>Count </h1>\r\n        <input\r\n          onChange={this.handleCountChange}\r\n          type='number'\r\n          defaultValue='3'\r\n          min='0'\r\n          max='10'\r\n          placeholder='Type...'\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            padding: '10px',\r\n            display: 'grid',\r\n            gridTemplateColumns: 'auto auto auto auto',\r\n            gap: '10px',\r\n            fontWeight: 'bold',\r\n            backgroundColor: 'pink'\r\n          }}\r\n        >\r\n          {/* {this.state.Numbers.map((number) => (\r\n            <Subcomponent key={number.id} />\r\n          ))} */}\r\n          {this.state.compArray}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Maincomponent\r\n","import React from 'react'\n\n// import { Maincomponent } from 'react-sum'\nimport Maincomponent from './Maincomponent'\nimport 'react-sum/dist/index.css'\nimport Subcomponent from './Subcomponent'\n\n\nconst App = () => {\n  return(\n<div >    \n        <Maincomponent />\n</div>\n    \n  );\n\n\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}